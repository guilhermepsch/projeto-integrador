// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id     Int       @id @default(autoincrement())
  user_email  String    @unique
  user_secret String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @default(now()) @updatedAt
  Employee    Employee?
  Client      Client?
}

model Employee {
  empl_id    Int      @id @default(autoincrement())
  empl_pis   String   @unique
  user_id    Int      @unique
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  user       User     @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: Cascade)
}

model Client {
  clie_id       Int             @id @default(autoincrement())
  clie_age      Int
  user_id       Int             @unique
  created_at    DateTime        @default(now())
  updated_at    DateTime        @default(now()) @updatedAt
  user          User            @relation(fields: [user_id], references: [user_id])
  ClientCards   ClientCards[]
  ClientAddress ClientAddress[]
  Cart          Cart[]
}

model ClientCards {
  clca_id          Int      @id @default(autoincrement())
  clca_cvv         Int
  clca_holder_name String
  clca_cpf         String
  clca_number      String
  client_id        Int
  created_at       DateTime @default(now())
  updated_at       DateTime @default(now()) @updatedAt

  client Client @relation(fields: [client_id], references: [clie_id])
}

model ClientAddress {
  clad_id     Int      @id @default(autoincrement())
  clad_street String
  clad_number String
  clad_other  String
  clad_cep    String
  clad_city   String
  clad_state  String
  client_id   Int
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now()) @updatedAt

  client Client @relation(fields: [client_id], references: [clie_id])
}

model Catalogue {
  cata_id    Int       @id @default(autoincrement())
  cata_title String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  Product    Product[]
}

model Product {
  prod_id          Int      @id @default(autoincrement())
  prod_name        String
  prod_price       Float
  prod_description String
  prod_image       String
  prod_type        Int
  cata_id          Int
  created_at       DateTime @default(now())
  updated_at       DateTime @default(now()) @updatedAt

  catalogue Catalogue @relation(fields: [cata_id], references: [cata_id], onDelete: Cascade, onUpdate: Cascade)
}

model Cart {
  cart_id    Int      @id @default(autoincrement())
  clie_id    Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  Client Client @relation(fields: [clie_id], references: [clie_id])
  Item   Item[]
  Order  Order?
}

model Item {
  item_id    Int      @id @default(autoincrement())
  prod_id    Int
  cart_id    Int?
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  Cart Cart? @relation(fields: [cart_id], references: [cart_id])
}

model Order {
  orde_id     Int      @id @default(autoincrement())
  orde_nf     String   @unique
  orde_status Int
  cart_id     Int      @unique
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now()) @updatedAt

  Cart Cart @relation(fields: [cart_id], references: [cart_id], onDelete: Cascade)
}
